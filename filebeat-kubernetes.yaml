---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: alazyer-system
  labels:
    k8s-app: filebeat
data:
  filebeat.yml: |-
    filebeat.config:
      inputs:
        # Mounted `filebeat-inputs` configmap:
        path: ${path.config}/inputs.d/*.yml
        # Reload inputs configs as they change:
        reload.enabled: false
      modules:
        path: ${path.config}/modules.d/*.yml
        # Reload module configs as they change:
        reload.enabled: false

    # To enable hints based autodiscover, remove `filebeat.config.inputs` configuration and uncomment this:
    #filebeat.autodiscover:
    #  providers:
    #    - type: kubernetes
    #      hints.enabled: true

    processors:
      - add_kubernetes_metadata:
      - add_docker_metadata:
      - add_fields:
          target: ""
          fields:
            region: ylzhang
      - replace_sub_fields:
          fields:
            - parent: "kubernetes.labels"
              old: "_"
              new: "&"
            - parent: "kubernetes.labels"
              old: "-"
              new: "*"
      - rename:
          when:
            equals:
              input.type: docker
          ignore_missing: true
          fail_on_error: false
          fields:
           - from: "message"
             to: "log_data"
           - from: "kubernetes.namespace"
             to: "kubernetes_namespace"
           - from: "kubernetes.labels"
             to: "kubernetes_labels"
           - from: "kubernetes.node.name"
             to: "node"
           - from: "kubernetes.pod.name"
             to: "pod_name"
           - from: "kubernetes.pod.uid"
             to: "pod_id"
           - from: "kubernetes.container.name"
             to: "kubernetes_container_name"
           - from: "docker.container.name"
             to: "docker_container_name"
           - from: "docker.container.id"
             to: "container_id"
           - from: "input.type"
             to: "source"
           - from: "stream"
             to: "paths"
      - drop_fields:
          fields: ["kubernetes", "docker", "host", "beat", "log", "offset", "input", "prospector"]

    cloud.id: ${ELASTIC_CLOUD_ID}
    cloud.auth: ${ELASTIC_CLOUD_AUTH}

    output.elasticsearch:
      hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']
      username: ${ELASTICSEARCH_USERNAME}
      password: ${ELASTICSEARCH_PASSWORD}
      index: "log-%{+yyyy-MM-dd}"
    setup.template.name: "log"
    setup.template.pattern: "log-*"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-inputs
  namespace: alazyer-system
  labels:
    k8s-app: filebeat
data:
  kubernetes.yml: |-
    - type: docker
      containers.ids:
      - "*"
      processors:
        - add_kubernetes_metadata:
            in_cluster: true
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: filebeat
  namespace: alazyer-system
  labels:
    k8s-app: filebeat
spec:
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: filebeat
    spec:
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      containers:
      - name: filebeat
        image: 192.168.16.52:60080/ylzhang/filebeat:6.7.2
        args: [
          "-c", "/etc/filebeat.yml",
          "-e",
          "--plugin", "/usr/share/filebeat/plugins/processors-modify-fields.so",
        ]
        env:
        - name: ELASTICSEARCH_HOST
          value: elasticsearch
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTICSEARCH_USERNAME
          value: elastic
        - name: ELASTICSEARCH_PASSWORD
          value: changeme
        - name: ELASTIC_CLOUD_ID
          value:
        - name: ELASTIC_CLOUD_AUTH
          value:
        - name: REGION_NAME
          value: ylzhang
        - name: REGION_ID
          value: donotcare
        securityContext:
          runAsUser: 0
          # If using Red Hat OpenShift uncomment this:
          #privileged: true
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: inputs
          mountPath: /usr/share/filebeat/inputs.d
          readOnly: true
        - name: data
          mountPath: /usr/share/filebeat/data
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: dockersock
          mountPath: /var/run/docker.sock
          readOnly: true
        imagePullPolicy: Always
      volumes:
      - name: config
        configMap:
          defaultMode: 0600
          name: filebeat-config
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: inputs
        configMap:
          defaultMode: 0600
          name: filebeat-inputs
      # data folder stores a registry of read status for all files, so we don't send everything again on a Filebeat pod restart
      - name: data
        hostPath:
          path: /var/lib/filebeat-data
          type: DirectoryOrCreate
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: alazyer-system
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: filebeat
  labels:
    k8s-app: filebeat
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - watch
  - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: alazyer-system
  labels:
    k8s-app: filebeat
---
